akka_akka {
  // Based on Scala3 managed community build
  tests = compile-only
  sbt.commands = [
    "set every targetSystemJdk := true",
    """set actor/Compile/scalacOptions -= "-Xfatal-warnings"""",
    """set testkit/Compile/scalacOptions -= "-Xfatal-warnings"""",
    """set actorTests/Compile/scalacOptions -= "-Xfatal-warnings"""",
  ]
}

atnos-org_eff {
  sbt.commands = [
    """set monixJVM/Test/unmanagedSources ~= (_.filterNot(_.getName == "TaskEffectSpec.scala"))"""
  ]
}

fomkin_korolev {
  projects.exclude=[
    "org.fomkin%korolev-http4s" # Conflicting cross Scala versions _3 vs _2.13
  ]
}

higherkindness_droste {
  sbt.commands = [
    """set scalacheck.jvm/Compile/scalacOptions -= "-Xfatal-warnings""""
  ]
}

http4s_http4s {
  projects.overrides = {
    tomcat-server.tests = compile-only
    circe.tests = compile-only
    blaze-client.tests = compile-only
  }
}

reactivemongo_reactivemongo {
  projects.overrides = {
    reactivemongo {
      // Actual tests needs env set up
      tests = compile-only
    }
  }
}

scala-native_scala-native.tests = compile-only  
scalafx/scalafx.tests = compile-only

scalatest_scalatest {
  sbt.commands=[
    "set every Test/classLoaderLayeringStrategy := ClassLoaderLayeringStrategy.Flat",
    // From managged community build https://github.com/lampepfl/dotty/blob/fb7f900667ea57e78a098e4831be36e0a7da6cba/community-build/src/scala/dotty/communitybuild/projects.scala#L293
    """set scalatestTestDotty/Test/managedSources ~= (_.filterNot(v => Seq("GeneratorSpec.scala", "FrameworkSuite.scala", "WaitersSpec.scala", "TestSortingReporterSpec.scala", "JavaFuturesSpec.scala", "ParallelTestExecutionSpec.scala", "TimeLimitsSpec.scala", "DispatchReporterSpec.scala", "TestThreadsStartingCounterSpec.scala", "SuiteSortingReporterSpec.scala", "CommonGeneratorsSpec.scala", "PropCheckerAssertingSpec.scala", "ConductorMethodsSuite.scala", "EventuallySpec.scala").contains(v.getName) ))""",
    """set scalacticTestDotty/Test/managedSources ~= (_.filterNot(_.getName == "NonEmptyArraySpec.scala"))""",
    """set genRegularTests4/Test/managedSources ~= (_.filterNot(v => Seq("FrameworkSuite.scala", "GeneratorSpec.scala", "CommonGeneratorsSpec.scala", "ParallelTestExecutionSpec.scala", "DispatchReporterSpec.scala", "TestThreadsStartingCounterSpec.scala", "EventuallySpec.scala").contains(v.getName) ))"""
  ]
  java.version=8
}

scalanlp_breeze {
  sbt.commands=[
    // flaky tests
    """set math/Test/unmanagedSources/excludeFilter := HiddenFileFilter || "OptimizationSpaceTest.scala" || "LinearAlgebraTest.scala" || "DenseMatrixTest.scala" || "CSCMatrixTest.scala" || "LUTest.scala" || "ProjectedQuasiNewtonTest.scala""""
  ]
}

// is Upstream compiled with Java 11
scalapb_scalapb.java.version = 11

scalapy_scalapy.tests = compile-only

scalaz_scalaz {
  sbt.options = ["-J-Xmx8g"]
  java.version = 8
}
scalikejdbc_scalikejdbc.tests = compile-only
scalikejdbc_scalikejdbc-async.tests = compile-only

// Uses missing AWS credentials in tests
seratch_awscala.tests = compile-only 

softwaremill_sttp {
  sbt.options=["-J-Xmx5g"]
}

softwaremill_tapir {
  sbt.options=["-J-Xmx5g", "-J-Xss2M"]
}

reactivemongo_reactivemongo {
  projects.exclude=[
    "reactivemongo%reactivemongo-alias" # Not a part of the main repo, defined in reactivemongo-shaded
  ]
}

testcontainers_testcontainers-scala.tests = compile-only

typelevel_jawn {
  projects.exclude=[
    "com.eed3si9n%shaded-jawn-parser"
  ]
}

thoughtworksinc_binding.scala {
  // Not a part of the repositroy
  projects.exclude=[
    "com.thoughtworks.binding%bindable-bindableseq"
    "com.thoughtworks.binding%covariantstreamt",
    "com.thoughtworks.binding%defaultfuture"
    "com.thoughtworks.binding%keywords-bind"
    "com.thoughtworks.binding%patchstreamt"
    "com.thoughtworks.binding%streamt"
  ]
}

wvlet_airframe {
  projects.exclude=[
    "org.wvlet.airframe%airspec" # Inner sbt project, no mechanism to handle that currently
  ]
}

zio_zio-quill {
  sbt.options=["-Dquill.scala.version=<SCALA_VERSION>"]
}

dotty-staging_zio {
  projects.exclude=[
    // Introduced in zio 2.x, we use outdated dotty_staging version
    "zio-internal-macros",
    "zio-managed"
  ]
}

